"use strict";(self.webpackChunktechdocs=self.webpackChunktechdocs||[]).push([[8458],{1577:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"docker","title":"Docker & Docker Compose","description":"Docker","source":"@site/docs/docker.md","sourceDirName":".","slug":"/docker","permalink":"/techdocs/docs/docker","draft":false,"unlisted":false,"editUrl":"https://github.com/lfir/techdocs/edit/devel/docs/docker.md","tags":[],"version":"current","lastUpdatedBy":"Leandro","lastUpdatedAt":1740567645000,"frontMatter":{"title":"Docker & Docker Compose"},"sidebar":"defaultSidebar","previous":{"title":"Debian & Ubuntu","permalink":"/techdocs/docs/debian"},"next":{"title":"Encrypt & compress folder","permalink":"/techdocs/docs/encanddecdirs"}}');var s=i(4848),d=i(8453);const t={title:"Docker & Docker Compose"},o=void 0,c={},l=[{value:"Docker",id:"docker",level:2},{value:"Build image",id:"build-image",level:3},{value:"Commonly used options",id:"commonly-used-options",level:3},{value:"Delete container",id:"delete-container",level:3},{value:"Delete image",id:"delete-image",level:3},{value:"Edit file stored in container volume",id:"edit-file-stored-in-container-volume",level:3},{value:"Get installed images",id:"get-installed-images",level:3},{value:"Get running containers",id:"get-running-containers",level:3},{value:"Kill running container",id:"kill-running-container",level:3},{value:"Manage Docker as non-root user",id:"manage-docker-as-non-root-user",level:3},{value:"Run image",id:"run-image",level:3},{value:"Start service the first time it is used instead of at boot",id:"start-service-the-first-time-it-is-used-instead-of-at-boot",level:3},{value:"Docker compose",id:"docker-compose",level:2},{value:"Build images defined in yml file",id:"build-images-defined-in-yml-file",level:3},{value:"Build images then start services",id:"build-images-then-start-services",level:3},{value:"Get info on running containers",id:"get-info-on-running-containers",level:3},{value:"Open interactive shell in running container",id:"open-interactive-shell-in-running-container",level:3},{value:"Start services in detached mode (bg process)",id:"start-services-in-detached-mode-bg-process",level:3},{value:"Start specific service only",id:"start-specific-service-only",level:3},{value:"Stop all running services",id:"stop-all-running-services",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"docker",children:"Docker"}),"\n",(0,s.jsx)(n.h3,{id:"build-image",children:"Build image"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker build -t imgName /path/to/dockerfile/dir\n"})}),"\n",(0,s.jsx)(n.h3,{id:"commonly-used-options",children:"Commonly used options"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Option"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"-e VAR=value"}),(0,s.jsx)("td",{children:"Set environment variable."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"--expose portNum"}),(0,s.jsx)("td",{children:"Expose a container port."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"-i"}),(0,s.jsx)("td",{children:"Interactive (for shells)."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:'-network="host"'}),(0,s.jsx)("td",{children:"Use host network interfaces."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsxs)("td",{children:["-p hostPort",":containerPort"]}),(0,s.jsx)("td",{children:"Make a container port accessible from a host port."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"-rm"}),(0,s.jsx)("td",{children:"Automatically remove the container when it exits."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsxs)("td",{children:["-u uid",":gid"]}),(0,s.jsx)("td",{children:"Run container as the specified user."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"-v /host/vol:/container/vol"}),(0,s.jsx)("td",{children:"Mount a host volume in the container."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsxs)("td",{children:["-v /target:/dest",":Z"]}),(0,s.jsx)("td",{children:"Grant selinux permission to host dir (target) and contents."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"delete-container",children:"Delete container"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker rm containerId\n"})}),"\n",(0,s.jsx)(n.h3,{id:"delete-image",children:"Delete image"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker rmi imageId\n"})}),"\n",(0,s.jsx)(n.h3,{id:"edit-file-stored-in-container-volume",children:"Edit file stored in container volume"}),"\n",(0,s.jsx)(n.p,{children:"Copy it to local machine (current directory) and make changes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker cp containerName:/path/to/file.ext .\n"})}),"\n",(0,s.jsx)(n.p,{children:"Move the edited file back to the volume."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker cp file.ext containerName:/path/to/file.ext\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-installed-images",children:"Get installed images"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker images\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-running-containers",children:"Get running containers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker ps\n"})}),"\n",(0,s.jsx)(n.h3,{id:"kill-running-container",children:"Kill running container"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker kill containerId\n"})}),"\n",(0,s.jsx)(n.h3,{id:"manage-docker-as-non-root-user",children:"Manage Docker as non-root user"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo groupadd docker\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo usermod -aG docker $USER\n"})}),"\n",(0,s.jsx)(n.p,{children:"Log out and log back in."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user",children:"Reference"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"run-image",children:"Run image"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker run [OPTIONS] IMAGE [COMMAND] [COMMAND ARGS]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"start-service-the-first-time-it-is-used-instead-of-at-boot",children:"Start service the first time it is used instead of at boot"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo systemctl enable docker.socket\n"})}),"\n",(0,s.jsx)(n.h2,{id:"docker-compose",children:"Docker compose"}),"\n",(0,s.jsx)(n.h3,{id:"build-images-defined-in-yml-file",children:"Build images defined in yml file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker-compose build\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Option ",(0,s.jsx)(n.code,{children:"-f /path/to/yml"})," can be used to specify the path to the definition file."]})}),"\n",(0,s.jsx)(n.h3,{id:"build-images-then-start-services",children:"Build images then start services"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker-compose up --build\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-info-on-running-containers",children:"Get info on running containers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker-compose ps\n"})}),"\n",(0,s.jsx)(n.h3,{id:"open-interactive-shell-in-running-container",children:"Open interactive shell in running container"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker-compose exec -it serviceName bash\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"serviceName"})," has to match the one in ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Other programs that require an interactive shell can be executed using the same syntax."}),"\n"]})}),"\n",(0,s.jsx)(n.h3,{id:"start-services-in-detached-mode-bg-process",children:"Start services in detached mode (bg process)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker-compose up -d\n"})}),"\n",(0,s.jsx)(n.p,{children:"When using this mode output from containers can be seen by running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker-compose logs\n"})}),"\n",(0,s.jsx)(n.h3,{id:"start-specific-service-only",children:"Start specific service only"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker-compose up --no-start\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker-compose start serviceName\n"})}),"\n",(0,s.jsx)(n.h3,{id:"stop-all-running-services",children:"Stop all running services"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo docker-compose down\n"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(6540);const s={},d=r.createContext(s);function t(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);