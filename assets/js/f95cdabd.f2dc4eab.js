"use strict";(self.webpackChunktechdocs=self.webpackChunktechdocs||[]).push([[8031],{6204:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=i(4848),s=i(8453);const r={title:"Bash"},l=void 0,o={id:"bash",title:"Bash",description:"Functions",source:"@site/docs/bash.md",sourceDirName:".",slug:"/bash",permalink:"/techdocs/docs/bash",draft:!1,unlisted:!1,editUrl:"https://github.com/lfir/techdocs/edit/devel/docs/bash.md",tags:[],version:"current",lastUpdatedBy:"Asta86",lastUpdatedAt:1732831741,formattedLastUpdatedAt:"Nov 28, 2024",frontMatter:{title:"Bash"},sidebar:"defaultSidebar",previous:{title:"Bacula",permalink:"/techdocs/docs/bacula"},next:{title:"CSS/HTML & JavaScript",permalink:"/techdocs/docs/csshtml"}},c={},d=[{value:"Functions",id:"functions",level:2},{value:"Access arguments from within a function",id:"access-arguments-from-within-a-function",level:3},{value:"Define function",id:"define-function",level:3},{value:"Get file count in target directory",id:"get-file-count-in-target-directory",level:2},{value:"Including dotfiles",id:"including-dotfiles",level:3},{value:"Excluding dotfiles",id:"excluding-dotfiles",level:3},{value:"Get full path of target file or dir",id:"get-full-path-of-target-file-or-dir",level:2},{value:"Iterate over a range of numbers including both limits",id:"iterate-over-a-range-of-numbers-including-both-limits",level:2},{value:"Jobs",id:"jobs",level:2},{value:"Merge files in dir with cat and glob",id:"merge-files-in-dir-with-cat-and-glob",level:2},{value:"Return to previous position in history after searching with Ctrl+r",id:"return-to-previous-position-in-history-after-searching-with-ctrlr",level:2},{value:"Run command during logout",id:"run-command-during-logout",level:2},{value:"Run executable file",id:"run-executable-file",level:2},{value:"Send string or command output to stdin of another command",id:"send-string-or-command-output-to-stdin-of-another-command",level:2},{value:"Set environment variables",id:"set-environment-variables",level:2},{value:"For all users",id:"for-all-users",level:3},{value:"For a given user",id:"for-a-given-user",level:3},{value:"Use parts of last command in current one",id:"use-parts-of-last-command-in-current-one",level:2},{value:"Watch log file in reverse order and paginated",id:"watch-log-file-in-reverse-order-and-paginated",level:2}];function a(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"access-arguments-from-within-a-function",children:"Access arguments from within a function"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["All: ",(0,t.jsx)(n.code,{children:'"@"'})]}),"\n",(0,t.jsxs)(n.li,{children:["All starting after x: ",(0,t.jsx)(n.code,{children:'"$\\{@:x}"'})]}),"\n",(0,t.jsxs)(n.li,{children:["Positional: ",(0,t.jsx)(n.code,{children:"$1"}),", ",(0,t.jsx)(n.code,{children:"$2"}),", ",(0,t.jsx)(n.code,{children:"$x"})]}),"\n",(0,t.jsxs)(n.li,{children:["Make argument list start after the first one: call ",(0,t.jsx)(n.code,{children:"shift"})," or ",(0,t.jsx)(n.code,{children:"shift n"})," to begin after the nth."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"define-function",children:"Define function"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'function hello () {\n    echo "Hello world"\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"get-file-count-in-target-directory",children:"Get file count in target directory"}),"\n",(0,t.jsx)(n.h3,{id:"including-dotfiles",children:"Including dotfiles"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls -1A | wc -l\n"})}),"\n",(0,t.jsx)(n.h3,{id:"excluding-dotfiles",children:"Excluding dotfiles"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls -1 | wc -l\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["For directories other than the current one the path can be passed to the ",(0,t.jsx)(n.code,{children:"ls"})," command."]})}),"\n",(0,t.jsx)(n.h2,{id:"get-full-path-of-target-file-or-dir",children:"Get full path of target file or dir"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"readlink -f filename\n"})}),"\n",(0,t.jsx)(n.h2,{id:"iterate-over-a-range-of-numbers-including-both-limits",children:"Iterate over a range of numbers including both limits"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'for i in "$(seq 1 3)"; do echo "$i"; done\n'})}),"\n",(0,t.jsx)(n.h2,{id:"jobs",children:"Jobs"}),"\n",(0,t.jsxs)(n.p,{children:["To pause the current job press ",(0,t.jsx)(n.code,{children:"Ctrl+z"})," and to restart the last job run ",(0,t.jsx)(n.code,{children:"fg"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"merge-files-in-dir-with-cat-and-glob",children:"Merge files in dir with cat and glob"}),"\n",(0,t.jsx)(n.p,{children:"Merges all files in the current dir into a single file."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cat * >> bigfile.txt\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"*.extension"})," instead of * to merge only files with the given extension."]})}),"\n",(0,t.jsx)(n.h2,{id:"return-to-previous-position-in-history-after-searching-with-ctrlr",children:"Return to previous position in history after searching with Ctrl+r"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Ctrl+c"})," - End of history."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Ctrl+g"})," - Last position before starting search."]}),"\n",(0,t.jsx)(n.h2,{id:"run-command-during-logout",children:"Run command during logout"}),"\n",(0,t.jsxs)(n.p,{children:["Add command to ",(0,t.jsx)(n.code,{children:"~/.bash_logout"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"run-executable-file",children:"Run executable file"}),"\n",(0,t.jsx)(n.p,{children:"Mark the file as executable."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"chmod +x filename\n"})}),"\n",(0,t.jsx)(n.p,{children:"Execute the file in the terminal with one of the following commands."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./filename\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bash filename\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"The second option works even if the file doesn't have execution permission."})}),"\n",(0,t.jsx)(n.h2,{id:"send-string-or-command-output-to-stdin-of-another-command",children:"Send string or command output to stdin of another command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Using pipes.\necho 'testOutput' | cut -c 5-\n# With here-docs (strings only).\n# Single-line string.\ncat <<< 'test str'\n# Multi-line string and command options.\ncat <<EOF -n -s\n\"$var\"\nline 2\nEOF\n# Using process substitution.\n# < is for redirection to stdin, <() is the process substitution syntax.\ncat < <(echo 'result sent to stdin')\n"})}),"\n",(0,t.jsx)(n.h2,{id:"set-environment-variables",children:"Set environment variables"}),"\n",(0,t.jsx)(n.h3,{id:"for-all-users",children:"For all users"}),"\n",(0,t.jsxs)(n.p,{children:["Add a line to ",(0,t.jsx)(n.code,{children:"/etc/profile"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"export VARNAME=value\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Or create a file with ",(0,t.jsx)(n.strong,{children:".sh extension"})," containing it in\n",(0,t.jsx)(n.code,{children:"/etc/profile.d"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"for-a-given-user",children:"For a given user"}),"\n",(0,t.jsxs)(n.p,{children:["Add line to ",(0,t.jsx)(n.code,{children:"~/.bash_profile"})," or ",(0,t.jsx)(n.code,{children:"~/.bashrc"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"These statements are executed after user log in."})}),"\n",(0,t.jsx)(n.h2,{id:"use-parts-of-last-command-in-current-one",children:"Use parts of last command in current one"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Positional arguments\n$ echo a\na\n$ echo !:1\na\n\n$ echo a b\na b\n$ echo !:2\nb\n\n$ echo c d\nc d\n$ echo !:2 q !:1\nd q c\n\n# Name of the command\n$ rm somefile\n$ echo !:0\nrm\n"})}),"\n",(0,t.jsx)(n.h2,{id:"watch-log-file-in-reverse-order-and-paginated",children:"Watch log file in reverse order and paginated"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"tac /var/log/cron-20240211 | less\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(6540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);